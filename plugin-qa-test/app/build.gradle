/*
 * (c) Copyright 2023 KineticFire. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
       flatDir {
           //todo accept system property
           dirs '/home/user/kf/github/example-gradle-plugin/plugin/plugin/build/libs/'
       }
    }  
    dependencies {
        classpath group: 'com.kineticfire.gradle.cool_stuff',
                  name: 'cool-stuff-plugin',
                  version: '1.0.0' //todo dynamic version
    }  
}


plugins {
    // Apply the groovy plugin to also add support for Groovy (needed for Spock)
    id 'groovy'

    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

// Apply the plugin under QA test
apply plugin: com.kineticfire.gradle.cool_stuff.CoolStuffPlugin

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use the latest Groovy version for Spock testing
    testImplementation 'org.codehaus.groovy:groovy:3.0.13'

    // Use the awesome Spock testing and specification framework even with Java
    testImplementation 'org.spockframework:spock-core:2.2-groovy-3.0'
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.kineticfire.gradle.cool_stuff.App'
}

group = 'com.kineticfire.gradle.cool_stuff.example.howdy'
version = 'SNAPSHOT'

jar {
    archiveBaseName = 'gradle-cool-stuff-plugin-example-howdy'
    manifest {
        attributes 'Main-Class' : 'com.kineticfire.gradle.cool_stuff.example.howdy.HowdyWorld'
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//todo
// use with:  g -Pmyprop="hi there" clean test
//println "myprop is $filesystemDir"
